#### #### #### #### #### #### ####
		Game
	
is public:	16	public:
is public:	17		Game(void);
is public:	18		~Game(void);
is public:	19	
is public:	20		static int Width;
is public:	21		static int Height;
is public:	22	
is public:	23		void	update(void) ;
is public:	24		void	draw(void) const ;
is public:	25		void	run(void) ;
is public:	26	};

#### #### #### #### #### #### ####
		Player
	public sf::Drawable {
is public:	19	public:
is public:	20		Player(std::string);
is public:	21		~Player(void);
is public:	22	
is public:	23		void			update(void);
is public:	24		virtual void	draw(sf::RenderTarget &, sf::RenderStates)  const;
is public:	25	};

#### #### #### #### #### #### ####
		Socket
	
is public:	22	public:
is public:	23		class SocketException;
is public:	24	
is public:	25		Socket(void);
is public:	26		~Socket(void);
is public:	27	
is public:	28		void	C_connect(void);
is public:	29		void	C_write(std::string) const ;
is public:	30	};

#### #### #### #### #### #### ####
		Socket::SocketException
	public std::exception {
is public:	8	public:
is public:	9			SocketException(void);
is public:	10			~SocketException(void) throw();
is public:	11			SocketException(SocketException const &);
is public:	12			SocketException &	operator=(SocketException const &);
is public:	13	
is public:	14			virtual char const * what(void) const throw();
is public:	15	};

#### #### #### #### #### #### ####
		Client
	
is public:	20	public:
is public:	21		Client(void);
is public:	22		~Client(void);
is public:	23	
is public:	24		void				setFd(int);
is public:	25		int					getFd(void);
is public:	26		struct sockaddr *	getAddr(void);
is public:	27		socklen_t *			getAddrsize(void);
is public:	28	};

#### #### #### #### #### #### ####
		Lua
	
is public:	18	public:
is public:	19		Lua(void);
is public:	20		~Lua(void);
is public:	21	
is public:	22		void		init(void);
is public:	23		void		exec(std::string);
is public:	24		void		getError(int);
is public:	25		std::string	get_Gstring(std::string);
is public:	26		int			get_Gnumber(std::string);
is public:	27	};

#### #### #### #### #### #### ####
		SimpleServer
	
is public:	19	public:
is public:	20		SimpleServer(std::string file = "conf");
is public:	21		~SimpleServer(void);
is public:	22	
is public:	23		void		run(void);
is public:	24	};

#### #### #### #### #### #### ####
		Socket
	
Warning: 	Socket is already declared
is public:	31	public:
is public:	32		Socket(std::string, int);
is public:	33		~Socket(void);
is public:	34	
is public:	35		void				setLua(Lua *);
is public:	36		int					getFd(void);
is public:	37		void				_select(void);
is public:	38		Client &			_accept(void);
is public:	39		int					_read(int);
is public:	40		void				_write(int, std::string);
is public:	41	};

{
  Client = {},
  Game = {},
  Lua = {},
  Player = {},
  SimpleServer = {},
  Socket = {},
  ["Socket::SocketException"] = {},
  get = <function 1>,
  getClassName = <function 2>,
  getClassTable = <function 3>,
  new = <function 4>,
  printFileTable = <function 5>
}
